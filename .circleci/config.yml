version: 2
jobs:
  build:
    docker:
      - image: golang:alpine
    working_directory: /go/src/github.com/danackerson/battlefleet
    steps:
      - checkout
      - run:
          name: "Fetch dependencies and test"
          command: |
            apk add -U curl build-base git

            go get github.com/jstemmer/go-junit-report
            mkdir -p /tmp/test-results

            go get -t -d -v ./...
            go test -v ./... | go-junit-report > /tmp/test-results/unit-tests.xml
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results

      - setup_remote_docker
      - run:
          name: "Install Docker CE"
          command: |
            # https://download.docker.com/linux/static/stable/x86_64/
            VER="18.06.1"
            curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-$VER-ce.tgz && tar --strip-components=1 -xvzf docker-$VER-ce.tgz -C /usr/local/bin
            rm docker-$VER-ce.tgz && rm -f /var/cache/apk/*

      - run:
          name: "Build the docker image & upload to DockerHub"
          command: |
            env GOOS=linux GOARCH=386 go build -o server server.go
            docker build --compress -t danackerson/battlefleet:vc$CIRCLE_BUILD_NUM .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag danackerson/battlefleet:vc$CIRCLE_BUILD_NUM danackerson/battlefleet:latest
            docker push danackerson/battlefleet:vc$CIRCLE_BUILD_NUM
            docker push danackerson/battlefleet:latest
            echo vc$CIRCLE_BUILD_NUM > last_docker_push

      - persist_to_workspace:
          root: /go/src/github.com/danackerson/battlefleet
          paths:
            - last_docker_push

  deploy:
    docker:
      - image: alpine
    steps:
      - add-ssh-keys:
          fingerprints:
            - "93:c4:61:21:a6:82:d8:6d:4f:73:11:79:37:23:83:07"
      - run:
          name: Start ssh-agent
          command: |
            apk add -U jq curl openssh-client

            ssh-agent -s > ~/.ssh_agent_conf
            source ~/.ssh_agent_conf
            for _k in $(ls ${HOME}/.ssh/id_*); do
              ssh-add ${_k} || true
            done

      - run:
          name: Disable Digital Ocean firewall for deploy
          command: |
            public_ip_address=$(curl -s https://checkip.amazonaws.com)
            curl -s https://raw.githubusercontent.com/danackerson/digitalocean/master/utils/addSSHipFW.sh | sh

      - attach_workspace:
          at: /tmp

      - deploy:
          name: "deploy container to Digital Ocean Droplet & launch"
          command: |
            source ~/.ssh_agent_conf
            ssh-add -l

            export DEPLOY_SERVER=deploy.ackerson.de
            if [ $DEPLOY_SERVER_IP ]; then
              export DEPLOY_SERVER=$DEPLOY_SERVER_IP
            fi
            echo "Deploy to $DEPLOY_SERVER"

            export DEPLOY_CONNECT="ssh -o StrictHostKeyChecking=no ackersond@$DEPLOY_SERVER"

            if [ -f /tmp/last_docker_push ]; then
              export LAST_DOCKER_PUSH=`cat /tmp/last_docker_push`
            else
              export LAST_DOCKER_PUSH=latest
            fi
            $DEPLOY_CONNECT docker pull danackerson/battlefleet:$LAST_DOCKER_PUSH
            $DEPLOY_CONNECT docker rm -f battlefleet || true

            export DOCKER_RUN="docker run -d --restart=always --network='web' \
              -e CIRCLE_BUILD_NUM=$LAST_DOCKER_PUSH -e bfSecret=$bfSecret \
              -e mongoDBUser=$mongoDBUser -e mongoDBPass=$mongoDBPass \
              -e mongoDBName=$mongoDBName -e mongoDBHost=$mongoDBHost \
              -e prodSession=$prodSession -e TEMPLATE_DIR=$TEMPLATE_DIR \
              -e AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID -e AUTH0_DOMAIN=$AUTH0_DOMAIN \
              -e AUTH0_CLIENT_SECRET=$AUTH0_CLIENT_SECRET -e AUTH0_CALLBACK_URL=$AUTH0_CALLBACK_URL \
              --label='traefik.backend=battlefleet' \
              --label='traefik.docker.network=web' \
              --label='traefik.game.frontend.rule=Host:battlefleet.eu,www.battlefleet.eu' \
              --label='traefik.game.frontend.passHostHeader=true' \
              --label='traefik.api.frontend.rule=Host:api.battlefleet.eu;HeadersRegexp:Cookie, $BF_API_TOKEN' \
              --label='traefik.api.frontend.passHostHeader=true' \
              --label='traefik.enable=true' \
              --label='traefik.port=8083' \
              --name battlefleet danackerson/battlefleet:$LAST_DOCKER_PUSH"
            $DEPLOY_CONNECT $DOCKER_RUN

      - run:
          name: Reenable Digital Ocean firewall
          command: |
            public_ip_address=$(curl -s https://checkip.amazonaws.com)
            curl -s https://raw.githubusercontent.com/danackerson/digitalocean/master/utils/dropSSHipFW.sh | sh
          when: always

workflows:
  version: 2
  build-deploy:
    jobs:
        - build
        - deploy:
            requires:
              - build
