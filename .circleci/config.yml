version: 2
jobs:
  build:
    docker:
      - image: golang:alpine
    working_directory: /go/src/github.com/danackerson/battlefleet
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: "Install Docker CE"
          command: |
            apk add -U jq curl openssh-client build-base git

            # https://download.docker.com/linux/static/stable/x86_64/
            VER="18.06.0"
            curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-$VER-ce.tgz && tar --strip-components=1 -xvzf docker-$VER-ce.tgz -C /usr/local/bin

            rm docker-$VER-ce.tgz && rm -f /var/cache/apk/*

      - run:
          name: "Fetch dependencies and test"
          command: |
            set -eu

            go get github.com/jstemmer/go-junit-report
            mkdir -p /tmp/test-results

            go get -t -d -v ./...
            go test -v ./... | go-junit-report > /tmp/test-results/unit-tests.xml
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results

      - run:
          name: "Build the docker image & upload to DockerHub"
          command: |
            env GOOS=linux GOARCH=386 go build -o server server.go
            docker build --compress -t danackerson/battlefleet:vc$CIRCLE_BUILD_NUM .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag danackerson/battlefleet:vc$CIRCLE_BUILD_NUM danackerson/battlefleet:latest
            docker push danackerson/battlefleet:vc$CIRCLE_BUILD_NUM
            docker push danackerson/battlefleet:latest

            echo $CIRCLE_BUILD_NUM > last_docker_push

      - persist_to_workspace:
          root: /go/src/github.com/danackerson/battlefleet
          paths:
            - last_docker_push

  deploy:
    docker:
      - image: google/cloud-sdk:alpine
    steps:
      - checkout
      - attach_workspace:
          at: /tmp

      - run:
          name: "deploy container to K8S cluster"
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet components install kubectl
            gcloud --quiet beta container clusters get-credentials ${GOOGLE_CLUSTER_NAME}

            kubectl delete secret battlefleet-env-secrets || true
            kubectl create secret generic battlefleet-env-secrets \
              --from-literal=CIRCLE_BUILD_NUM=$CIRCLE_BUILD_NUM \
              --from-literal=bfSecret=$bfSecret \
              --from-literal=mongoDBUser=$mongoDBUser \
              --from-literal=mongoDBPass=$mongoDBPass \
              --from-literal=mongoDBName=$mongoDBName \
              --from-literal=mongoDBHost=$mongoDBHost \
              --from-literal=prodSession=$prodSession \
              --from-literal=TEMPLATE_DIR=$TEMPLATE_DIR \
              --from-literal=AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID \
              --from-literal=AUTH0_DOMAIN=$AUTH0_DOMAIN \
              --from-literal=AUTH0_CLIENT_SECRET=$AUTH0_CLIENT_SECRET \
              --from-literal=AUTH0_CALLBACK_URL=$AUTH0_CALLBACK_URL

            if [ -f /tmp/last_docker_push ]; then
              export LAST_DOCKER_PUSH=vc`cat /tmp/last_docker_push`
            else
              export LAST_DOCKER_PUSH=latest
            fi

            sed -i -e "s@{{CIRCLE_BUILD_NUM}}@$LAST_DOCKER_PUSH@" deploy.yaml
            kubectl apply -f deploy.yaml
            kubectl rollout status deployment/battlefleet-deploy

workflows:
  version: 2
  build-deploy:
    jobs:
        - build
        - deploy:
            requires:
              - build
